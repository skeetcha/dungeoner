                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module dungeon
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _rand_range
                                     12 	.globl _free
                                     13 	.globl _calloc
                                     14 	.globl _neighbors
                                     15 	.globl _init_dungeon
                                     16 	.globl _generate_dungeon
                                     17 	.globl _generate_room
                                     18 	.globl _room_has_door
                                     19 	.globl _get_opposite_direction_bit
                                     20 	.globl _get_neighbor_room_index
                                     21 	.globl _free_dungeon
                                     22 ;--------------------------------------------------------
                                     23 ; special function registers
                                     24 ;--------------------------------------------------------
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _DATA
                                     29 ;--------------------------------------------------------
                                     30 ; ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area _INITIALIZED
    00000000                         33 _neighbors::
    00000000                         34 	.ds 2
                                     35 ;--------------------------------------------------------
                                     36 ; absolute external ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area _DABS (ABS)
                                     39 ;--------------------------------------------------------
                                     40 ; global & static initialisations
                                     41 ;--------------------------------------------------------
                                     42 	.area _HOME
                                     43 	.area _GSINIT
                                     44 	.area _GSFINAL
                                     45 	.area _GSINIT
                                     46 ;--------------------------------------------------------
                                     47 ; Home
                                     48 ;--------------------------------------------------------
                                     49 	.area _HOME
                                     50 	.area _HOME
                                     51 ;--------------------------------------------------------
                                     52 ; code
                                     53 ;--------------------------------------------------------
                                     54 	.area _CODE
                                     55 ;src/dungeon.c:14: void init_dungeon(Dungeon* d, const int width, const int height) {
                                     56 ;	---------------------------------
                                     57 ; Function init_dungeon
                                     58 ; ---------------------------------
    00000000                         59 _init_dungeon::
    00000000 C5               [16]   60 	push	bc
                                     61 ;src/dungeon.c:15: d->width = width;
    00000001 21 04 00         [12]   62 	ld	hl, #0x0004
    00000004 19               [ 8]   63 	add	hl, de
    00000005 4D               [ 4]   64 	ld	c, l
    00000006 44               [ 4]   65 	ld	b, h
    00000007 F8 00            [12]   66 	ldhl	sp,	#0
    00000009 2A               [ 8]   67 	ld	a, (hl+)
    0000000A 02               [ 8]   68 	ld	(bc), a
    0000000B 03               [ 8]   69 	inc	bc
    0000000C 7E               [ 8]   70 	ld	a, (hl)
    0000000D 02               [ 8]   71 	ld	(bc), a
                                     72 ;src/dungeon.c:16: d->height = height;
    0000000E 21 06 00         [12]   73 	ld	hl, #0x0006
    00000011 19               [ 8]   74 	add	hl, de
    00000012 4D               [ 4]   75 	ld	c, l
    00000013 44               [ 4]   76 	ld	b, h
    00000014 F8 04            [12]   77 	ldhl	sp,	#4
    00000016 2A               [ 8]   78 	ld	a, (hl+)
    00000017 02               [ 8]   79 	ld	(bc), a
    00000018 03               [ 8]   80 	inc	bc
                                     81 ;src/dungeon.c:17: d->grid = (uint8_t*)calloc(width * height, sizeof(uint8_t));
    00000019 3A               [ 8]   82 	ld	a, (hl-)
    0000001A 02               [ 8]   83 	ld	(bc), a
    0000001B D5               [16]   84 	push	de
    0000001C 2A               [ 8]   85 	ld	a, (hl+)
    0000001D 4F               [ 4]   86 	ld	c, a
    0000001E 46               [ 8]   87 	ld	b, (hl)
    0000001F F8 02            [12]   88 	ldhl	sp,	#2
    00000021 2A               [ 8]   89 	ld	a, (hl+)
    00000022 5F               [ 4]   90 	ld	e, a
    00000023 56               [ 8]   91 	ld	d, (hl)
    00000024 CDr00r00         [24]   92 	call	__mulint
    00000027 69               [ 4]   93 	ld	l, c
                                     94 ;	spillPairReg hl
                                     95 ;	spillPairReg hl
    00000028 60               [ 4]   96 	ld	h, b
                                     97 ;	spillPairReg hl
                                     98 ;	spillPairReg hl
    00000029 01 01 00         [12]   99 	ld	bc, #0x0001
    0000002C 5D               [ 4]  100 	ld	e, l
    0000002D 54               [ 4]  101 	ld	d, h
    0000002E CDr00r00         [24]  102 	call	_calloc
    00000031 D1               [12]  103 	pop	de
    00000032 79               [ 4]  104 	ld	a, c
    00000033 12               [ 8]  105 	ld	(de), a
    00000034 13               [ 8]  106 	inc	de
    00000035 78               [ 4]  107 	ld	a, b
    00000036 12               [ 8]  108 	ld	(de), a
                                    109 ;src/dungeon.c:18: }
    00000037 33               [ 8]  110 	inc	sp
    00000038 33               [ 8]  111 	inc	sp
    00000039 E1               [12]  112 	pop	hl
    0000003A F1               [12]  113 	pop	af
    0000003B E9               [ 4]  114 	jp	(hl)
                                    115 ;src/dungeon.c:20: void generate_dungeon(Dungeon* d) {
                                    116 ;	---------------------------------
                                    117 ; Function generate_dungeon
                                    118 ; ---------------------------------
    0000003C                        119 _generate_dungeon::
    0000003C E8 F1            [16]  120 	add	sp, #-15
    0000003E F8 0B            [12]  121 	ldhl	sp,	#11
    00000040 7B               [ 4]  122 	ld	a, e
    00000041 22               [ 8]  123 	ld	(hl+), a
                                    124 ;src/dungeon.c:23: int dungeon_area = d->width * d->height;
    00000042 7A               [ 4]  125 	ld	a, d
    00000043 32               [ 8]  126 	ld	(hl-), a
    00000044 2A               [ 8]  127 	ld	a, (hl+)
    00000045 5F               [ 4]  128 	ld	e, a
    00000046 56               [ 8]  129 	ld	d, (hl)
    00000047 21 04 00         [12]  130 	ld	hl, #0x0004
    0000004A 19               [ 8]  131 	add	hl, de
    0000004B 4D               [ 4]  132 	ld	c, l
    0000004C 44               [ 4]  133 	ld	b, h
    0000004D 59               [ 4]  134 	ld	e, c
    0000004E 50               [ 4]  135 	ld	d, b
    0000004F 1A               [ 8]  136 	ld	a, (de)
    00000050 F8 0D            [12]  137 	ldhl	sp,	#13
    00000052 22               [ 8]  138 	ld	(hl+), a
    00000053 13               [ 8]  139 	inc	de
    00000054 1A               [ 8]  140 	ld	a, (de)
    00000055 32               [ 8]  141 	ld	(hl-), a
    00000056 2B               [ 8]  142 	dec	hl
    00000057 2B               [ 8]  143 	dec	hl
    00000058 2A               [ 8]  144 	ld	a, (hl+)
    00000059 5F               [ 4]  145 	ld	e, a
    0000005A 56               [ 8]  146 	ld	d, (hl)
    0000005B 21 06 00         [12]  147 	ld	hl, #0x0006
    0000005E 19               [ 8]  148 	add	hl, de
    0000005F 2A               [ 8]  149 	ld	a, (hl+)
    00000060 4F               [ 4]  150 	ld	c, a
    00000061 46               [ 8]  151 	ld	b, (hl)
    00000062 F8 0D            [12]  152 	ldhl	sp,	#13
    00000064 2A               [ 8]  153 	ld	a, (hl+)
    00000065 5F               [ 4]  154 	ld	e, a
    00000066 56               [ 8]  155 	ld	d, (hl)
                                    156 ;src/dungeon.c:24: int* generated_cells = (int*)calloc(dungeon_area, sizeof(int));
    00000067 CDr00r00         [24]  157 	call	__mulint
    0000006A F8 02            [12]  158 	ldhl	sp,	#2
    0000006C 79               [ 4]  159 	ld	a, c
    0000006D 22               [ 8]  160 	ld	(hl+), a
    0000006E 70               [ 8]  161 	ld	(hl), b
    0000006F 01 02 00         [12]  162 	ld	bc, #0x0002
    00000072 F8 02            [12]  163 	ldhl	sp,	#2
    00000074 2A               [ 8]  164 	ld	a, (hl+)
    00000075 5F               [ 4]  165 	ld	e, a
    00000076 56               [ 8]  166 	ld	d, (hl)
    00000077 CDr00r00         [24]  167 	call	_calloc
    0000007A F8 04            [12]  168 	ldhl	sp,	#4
    0000007C 79               [ 4]  169 	ld	a, c
    0000007D 22               [ 8]  170 	ld	(hl+), a
    0000007E 70               [ 8]  171 	ld	(hl), b
                                    172 ;src/dungeon.c:25: generated_cells_number = 0;
    0000007F AF               [ 4]  173 	xor	a, a
    00000080 F8 00            [12]  174 	ldhl	sp,	#0
    00000082 22               [ 8]  175 	ld	(hl+), a
                                    176 ;src/dungeon.c:27: for (i = 0; (generated_cells_number < dungeon_area) && ((i == 0) || (i < generated_cells_number)); i++) {
    00000083 22               [ 8]  177 	ld	(hl+), a
    00000084 2A               [ 8]  178 	ld	a, (hl+)
    00000085 5F               [ 4]  179 	ld	e, a
    00000086 56               [ 8]  180 	ld	d, (hl)
    00000087 21 03 00         [12]  181 	ld	hl, #0x0003
    0000008A 19               [ 8]  182 	add	hl, de
    0000008B E5               [16]  183 	push	hl
    0000008C 7D               [ 4]  184 	ld	a, l
    0000008D F8 08            [12]  185 	ldhl	sp,	#8
    0000008F 77               [ 8]  186 	ld	(hl), a
    00000090 E1               [12]  187 	pop	hl
    00000091 7C               [ 4]  188 	ld	a, h
    00000092 F8 07            [12]  189 	ldhl	sp,	#7
    00000094 77               [ 8]  190 	ld	(hl), a
    00000095 F8 03            [12]  191 	ldhl	sp,	#3
    00000097 7E               [ 8]  192 	ld	a, (hl)
    00000098 07               [ 4]  193 	rlca
    00000099 E6 01            [ 8]  194 	and	a,#0x01
    0000009B F8 08            [12]  195 	ldhl	sp,	#8
    0000009D 77               [ 8]  196 	ld	(hl), a
    0000009E AF               [ 4]  197 	xor	a, a
    0000009F F8 0D            [12]  198 	ldhl	sp,	#13
    000000A1 22               [ 8]  199 	ld	(hl+), a
    000000A2 77               [ 8]  200 	ld	(hl), a
    000000A3                        201 00113$:
    000000A3 F8 02            [12]  202 	ldhl	sp,	#2
    000000A5 2A               [ 8]  203 	ld	a, (hl+)
    000000A6 4F               [ 4]  204 	ld	c, a
    000000A7 46               [ 8]  205 	ld	b, (hl)
    000000A8 F8 00            [12]  206 	ldhl	sp,	#0
    000000AA 2A               [ 8]  207 	ld	a, (hl+)
    000000AB 91               [ 4]  208 	sub	a, c
    000000AC 7E               [ 8]  209 	ld	a, (hl)
    000000AD 98               [ 4]  210 	sbc	a, b
    000000AE D2r85r01         [16]  211 	jp	NC, 00109$
    000000B1 F8 0E            [12]  212 	ldhl	sp,	#14
    000000B3 3A               [ 8]  213 	ld	a, (hl-)
    000000B4 B6               [ 8]  214 	or	a, (hl)
    000000B5 28 0F            [12]  215 	jr	Z, 00112$
    000000B7 F8 0D            [12]  216 	ldhl	sp,	#13
    000000B9 5D               [ 4]  217 	ld	e, l
    000000BA 54               [ 4]  218 	ld	d, h
    000000BB F8 00            [12]  219 	ldhl	sp,	#0
    000000BD 1A               [ 8]  220 	ld	a, (de)
    000000BE 13               [ 8]  221 	inc	de
    000000BF 96               [ 8]  222 	sub	a, (hl)
    000000C0 23               [ 8]  223 	inc	hl
    000000C1 1A               [ 8]  224 	ld	a, (de)
    000000C2 9E               [ 8]  225 	sbc	a, (hl)
    000000C3 D2r85r01         [16]  226 	jp	NC, 00109$
    000000C6                        227 00112$:
                                    228 ;src/dungeon.c:28: if ((i == 0) && (generated_cells_number == 0)) {
    000000C6 F8 0E            [12]  229 	ldhl	sp,	#14
    000000C8 3A               [ 8]  230 	ld	a, (hl-)
    000000C9 B6               [ 8]  231 	or	a, (hl)
    000000CA 20 37            [12]  232 	jr	NZ, 00102$
    000000CC F8 01            [12]  233 	ldhl	sp,	#1
    000000CE 3A               [ 8]  234 	ld	a, (hl-)
    000000CF B6               [ 8]  235 	or	a, (hl)
    000000D0 20 31            [12]  236 	jr	NZ, 00102$
                                    237 ;src/dungeon.c:29: entrance = rand_range(0, dungeon_area);
    000000D2 23               [ 8]  238 	inc	hl
    000000D3 23               [ 8]  239 	inc	hl
    000000D4 2A               [ 8]  240 	ld	a, (hl+)
    000000D5 4F               [ 4]  241 	ld	c, a
    000000D6 46               [ 8]  242 	ld	b, (hl)
    000000D7 11 00 00         [12]  243 	ld	de, #0x0000
    000000DA CDr00r00         [24]  244 	call	_rand_range
                                    245 ;src/dungeon.c:30: generated_cells[0] = entrance;
    000000DD F8 04            [12]  246 	ldhl	sp,	#4
    000000DF 2A               [ 8]  247 	ld	a,	(hl+)
    000000E0 66               [ 8]  248 	ld	h, (hl)
    000000E1 6F               [ 4]  249 	ld	l, a
    000000E2 79               [ 4]  250 	ld	a, c
    000000E3 22               [ 8]  251 	ld	(hl+), a
    000000E4 70               [ 8]  252 	ld	(hl), b
                                    253 ;src/dungeon.c:31: d->grid[entrance] = BIT_ENTRANCE | BIT_USED_ROOM;
    000000E5 F8 0B            [12]  254 	ldhl	sp,#11
    000000E7 2A               [ 8]  255 	ld	a, (hl+)
    000000E8 5F               [ 4]  256 	ld	e, a
    000000E9 56               [ 8]  257 	ld	d, (hl)
    000000EA 1A               [ 8]  258 	ld	a, (de)
    000000EB 6F               [ 4]  259 	ld	l, a
                                    260 ;	spillPairReg hl
                                    261 ;	spillPairReg hl
    000000EC 13               [ 8]  262 	inc	de
    000000ED 1A               [ 8]  263 	ld	a, (de)
    000000EE 67               [ 4]  264 	ld	h, a
                                    265 ;	spillPairReg hl
                                    266 ;	spillPairReg hl
    000000EF 09               [ 8]  267 	add	hl, bc
    000000F0 36 03            [12]  268 	ld	(hl), #0x03
                                    269 ;src/dungeon.c:32: d->entrance = entrance;
    000000F2 F8 0B            [12]  270 	ldhl	sp,	#11
    000000F4 2A               [ 8]  271 	ld	a, (hl+)
    000000F5 66               [ 8]  272 	ld	h, (hl)
                                    273 ;	spillPairReg hl
                                    274 ;	spillPairReg hl
    000000F6 6F               [ 4]  275 	ld	l, a
                                    276 ;	spillPairReg hl
                                    277 ;	spillPairReg hl
    000000F7 23               [ 8]  278 	inc	hl
    000000F8 23               [ 8]  279 	inc	hl
    000000F9 79               [ 4]  280 	ld	a, c
    000000FA 22               [ 8]  281 	ld	(hl+), a
    000000FB 70               [ 8]  282 	ld	(hl), b
                                    283 ;src/dungeon.c:33: generated_cells_number = 1;
    000000FC F8 00            [12]  284 	ldhl	sp,	#0
    000000FE 3E 01            [ 8]  285 	ld	a, #0x01
    00000100 22               [ 8]  286 	ld	(hl+), a
    00000101 AF               [ 4]  287 	xor	a, a
    00000102 77               [ 8]  288 	ld	(hl), a
    00000103                        289 00102$:
                                    290 ;src/dungeon.c:36: generate_room(d, i, generated_cells, &generated_cells_number);
    00000103 F8 00            [12]  291 	ldhl	sp,	#0
    00000105 E5               [16]  292 	push	hl
    00000106 F8 06            [12]  293 	ldhl	sp,	#6
    00000108 2A               [ 8]  294 	ld	a, (hl+)
    00000109 5F               [ 4]  295 	ld	e, a
    0000010A 56               [ 8]  296 	ld	d, (hl)
    0000010B D5               [16]  297 	push	de
    0000010C F8 11            [12]  298 	ldhl	sp,	#17
    0000010E 2A               [ 8]  299 	ld	a, (hl+)
    0000010F 4F               [ 4]  300 	ld	c, a
    00000110 46               [ 8]  301 	ld	b, (hl)
    00000111 F8 0F            [12]  302 	ldhl	sp,	#15
    00000113 2A               [ 8]  303 	ld	a, (hl+)
    00000114 5F               [ 4]  304 	ld	e, a
    00000115 56               [ 8]  305 	ld	d, (hl)
    00000116 CDr90r01         [24]  306 	call	_generate_room
                                    307 ;src/dungeon.c:31: d->grid[entrance] = BIT_ENTRANCE | BIT_USED_ROOM;
    00000119 F8 0B            [12]  308 	ldhl	sp,#11
    0000011B 2A               [ 8]  309 	ld	a, (hl+)
    0000011C 5F               [ 4]  310 	ld	e, a
    0000011D 56               [ 8]  311 	ld	d, (hl)
    0000011E 1A               [ 8]  312 	ld	a, (de)
    0000011F F8 09            [12]  313 	ldhl	sp,	#9
    00000121 22               [ 8]  314 	ld	(hl+), a
    00000122 13               [ 8]  315 	inc	de
    00000123 1A               [ 8]  316 	ld	a, (de)
    00000124 77               [ 8]  317 	ld	(hl), a
                                    318 ;src/dungeon.c:38: if (!(d->grid[generated_cells[i]] & BIT_USED_ROOM)) {
    00000125 F8 0D            [12]  319 	ldhl	sp,	#13
    00000127 2A               [ 8]  320 	ld	a, (hl+)
    00000128 56               [ 8]  321 	ld	d, (hl)
    00000129 87               [ 4]  322 	add	a, a
    0000012A CB 12            [ 8]  323 	rl	d
    0000012C 5F               [ 4]  324 	ld	e, a
    0000012D F8 04            [12]  325 	ldhl	sp,	#4
    0000012F 2A               [ 8]  326 	ld	a,	(hl+)
    00000130 66               [ 8]  327 	ld	h, (hl)
    00000131 6F               [ 4]  328 	ld	l, a
    00000132 19               [ 8]  329 	add	hl, de
    00000133 2A               [ 8]  330 	ld	a, (hl+)
    00000134 4F               [ 4]  331 	ld	c, a
    00000135 46               [ 8]  332 	ld	b, (hl)
    00000136 F8 09            [12]  333 	ldhl	sp,	#9
    00000138 2A               [ 8]  334 	ld	a,	(hl+)
    00000139 66               [ 8]  335 	ld	h, (hl)
    0000013A 6F               [ 4]  336 	ld	l, a
    0000013B 09               [ 8]  337 	add	hl, bc
    0000013C 4D               [ 4]  338 	ld	c, l
    0000013D 44               [ 4]  339 	ld	b, h
    0000013E 0A               [ 8]  340 	ld	a, (bc)
    0000013F CB 47            [ 8]  341 	bit	0, a
    00000141 20 03            [12]  342 	jr	NZ, 00105$
                                    343 ;src/dungeon.c:39: d->grid[generated_cells[i]] |= BIT_USED_ROOM;
    00000143 CB C7            [ 8]  344 	set	0, a
    00000145 02               [ 8]  345 	ld	(bc), a
    00000146                        346 00105$:
                                    347 ;src/dungeon.c:42: if ((i == (generated_cells_number - 1)) && (generated_cells_number < (dungeon_area / 4 * 3))) {
    00000146 C1               [12]  348 	pop	bc
    00000147 C5               [16]  349 	push	bc
    00000148 0B               [ 8]  350 	dec	bc
    00000149 F8 0D            [12]  351 	ldhl	sp,	#13
    0000014B 7E               [ 8]  352 	ld	a, (hl)
    0000014C 91               [ 4]  353 	sub	a, c
    0000014D 20 2B            [12]  354 	jr	NZ, 00114$
    0000014F 23               [ 8]  355 	inc	hl
    00000150 7E               [ 8]  356 	ld	a, (hl)
    00000151 90               [ 4]  357 	sub	a, b
    00000152 20 26            [12]  358 	jr	NZ, 00114$
    00000154 F8 02            [12]  359 	ldhl	sp,	#2
    00000156 2A               [ 8]  360 	ld	a, (hl+)
    00000157 4F               [ 4]  361 	ld	c, a
    00000158 46               [ 8]  362 	ld	b, (hl)
    00000159 F8 08            [12]  363 	ldhl	sp,	#8
    0000015B 7E               [ 8]  364 	ld	a, (hl)
    0000015C B7               [ 4]  365 	or	a, a
    0000015D 28 05            [12]  366 	jr	Z, 00117$
    0000015F 2B               [ 8]  367 	dec	hl
    00000160 2B               [ 8]  368 	dec	hl
    00000161 2A               [ 8]  369 	ld	a, (hl+)
    00000162 4F               [ 4]  370 	ld	c, a
    00000163 46               [ 8]  371 	ld	b, (hl)
    00000164                        372 00117$:
    00000164 CB 28            [ 8]  373 	sra	b
    00000166 CB 19            [ 8]  374 	rr	c
    00000168 CB 28            [ 8]  375 	sra	b
    0000016A CB 19            [ 8]  376 	rr	c
    0000016C 69               [ 4]  377 	ld	l, c
    0000016D 60               [ 4]  378 	ld	h, b
    0000016E 29               [ 8]  379 	add	hl, hl
    0000016F 09               [ 8]  380 	add	hl, bc
    00000170 4D               [ 4]  381 	ld	c, l
    00000171 44               [ 4]  382 	ld	b, h
    00000172 F8 00            [12]  383 	ldhl	sp,	#0
    00000174 2A               [ 8]  384 	ld	a, (hl+)
    00000175 91               [ 4]  385 	sub	a, c
    00000176 7E               [ 8]  386 	ld	a, (hl)
    00000177 98               [ 4]  387 	sbc	a, b
    00000178 38 0B            [12]  388 	jr	C, 00109$
                                    389 ;src/dungeon.c:43: break;
    0000017A                        390 00114$:
                                    391 ;src/dungeon.c:27: for (i = 0; (generated_cells_number < dungeon_area) && ((i == 0) || (i < generated_cells_number)); i++) {
    0000017A F8 0D            [12]  392 	ldhl	sp,	#13
    0000017C 34               [12]  393 	inc	(hl)
    0000017D C2rA3r00         [16]  394 	jp	NZ,00113$
    00000180 23               [ 8]  395 	inc	hl
    00000181 34               [12]  396 	inc	(hl)
    00000182 C3rA3r00         [16]  397 	jp	00113$
    00000185                        398 00109$:
                                    399 ;src/dungeon.c:47: free(generated_cells);
    00000185 F8 04            [12]  400 	ldhl	sp,	#4
    00000187 2A               [ 8]  401 	ld	a, (hl+)
    00000188 5F               [ 4]  402 	ld	e, a
    00000189 56               [ 8]  403 	ld	d, (hl)
    0000018A CDr00r00         [24]  404 	call	_free
                                    405 ;src/dungeon.c:48: }
    0000018D E8 0F            [16]  406 	add	sp, #15
    0000018F C9               [16]  407 	ret
                                    408 ;src/dungeon.c:50: void generate_room(Dungeon* d, unsigned int cell_index_queue, int* cells_queue, unsigned int* queue_size) {
                                    409 ;	---------------------------------
                                    410 ; Function generate_room
                                    411 ; ---------------------------------
    00000190                        412 _generate_room::
    00000190 E8 F4            [16]  413 	add	sp, #-12
    00000192 F8 08            [12]  414 	ldhl	sp,	#8
    00000194 7B               [ 4]  415 	ld	a, e
    00000195 22               [ 8]  416 	ld	(hl+), a
    00000196 72               [ 8]  417 	ld	(hl), d
                                    418 ;src/dungeon.c:52: potential_doors = rand_range(0, neighbors);
    00000197 C5               [16]  419 	push	bc
    00000198 21r00r00         [12]  420 	ld	hl, #_neighbors
    0000019B 2A               [ 8]  421 	ld	a, (hl+)
    0000019C 4F               [ 4]  422 	ld	c, a
    0000019D 46               [ 8]  423 	ld	b, (hl)
    0000019E 11 00 00         [12]  424 	ld	de, #0x0000
    000001A1 CDr00r00         [24]  425 	call	_rand_range
    000001A4 59               [ 4]  426 	ld	e, c
    000001A5 50               [ 4]  427 	ld	d, b
    000001A6 C1               [12]  428 	pop	bc
    000001A7 33               [ 8]  429 	inc	sp
    000001A8 33               [ 8]  430 	inc	sp
    000001A9 D5               [16]  431 	push	de
                                    432 ;src/dungeon.c:53: unsigned int cell_index = cells_queue[cell_index_queue];
    000001AA CB 21            [ 8]  433 	sla	c
    000001AC CB 10            [ 8]  434 	rl	b
    000001AE F8 0E            [12]  435 	ldhl	sp,	#14
    000001B0 2A               [ 8]  436 	ld	a,	(hl+)
    000001B1 66               [ 8]  437 	ld	h, (hl)
    000001B2 6F               [ 4]  438 	ld	l, a
    000001B3 09               [ 8]  439 	add	hl, bc
    000001B4 4D               [ 4]  440 	ld	c, l
    000001B5 44               [ 4]  441 	ld	b, h
    000001B6 59               [ 4]  442 	ld	e, c
    000001B7 50               [ 4]  443 	ld	d, b
    000001B8 1A               [ 8]  444 	ld	a, (de)
    000001B9 F8 02            [12]  445 	ldhl	sp,	#2
    000001BB 22               [ 8]  446 	ld	(hl+), a
    000001BC 13               [ 8]  447 	inc	de
    000001BD 1A               [ 8]  448 	ld	a, (de)
    000001BE 77               [ 8]  449 	ld	(hl), a
                                    450 ;src/dungeon.c:57: for (door = 1; door <= neighbors; door <<= 1) {
    000001BF F8 0A            [12]  451 	ldhl	sp,	#10
    000001C1 3E 01            [ 8]  452 	ld	a, #0x01
    000001C3 22               [ 8]  453 	ld	(hl+), a
    000001C4 AF               [ 4]  454 	xor	a, a
    000001C5 77               [ 8]  455 	ld	(hl), a
    000001C6                        456 00114$:
    000001C6 11r00r00         [12]  457 	ld	de, #_neighbors
    000001C9 F8 0A            [12]  458 	ldhl	sp,	#10
    000001CB 1A               [ 8]  459 	ld	a, (de)
    000001CC 13               [ 8]  460 	inc	de
    000001CD 96               [ 8]  461 	sub	a, (hl)
    000001CE 23               [ 8]  462 	inc	hl
    000001CF 1A               [ 8]  463 	ld	a, (de)
    000001D0 9E               [ 8]  464 	sbc	a, (hl)
    000001D1 1A               [ 8]  465 	ld	a, (de)
    000001D2 57               [ 4]  466 	ld	d, a
    000001D3 5E               [ 8]  467 	ld	e, (hl)
    000001D4 CB 7B            [ 8]  468 	bit	7, e
    000001D6 28 07            [12]  469 	jr	Z, 00174$
    000001D8 CB 7A            [ 8]  470 	bit	7, d
    000001DA 20 08            [12]  471 	jr	NZ, 00175$
    000001DC BF               [ 4]  472 	cp	a, a
    000001DD 18 05            [12]  473 	jr	00175$
    000001DF                        474 00174$:
    000001DF CB 7A            [ 8]  475 	bit	7, d
    000001E1 28 01            [12]  476 	jr	Z, 00175$
    000001E3 37               [ 4]  477 	scf
    000001E4                        478 00175$:
    000001E4 DArFFr02         [16]  479 	jp	C, 00115$
                                    480 ;src/dungeon.c:58: if (((door & neighbors) != door) || (d->grid[cell_index] & door)) {
    000001E7 F8 0A            [12]  481 	ldhl	sp,	#10
    000001E9 7E               [ 8]  482 	ld	a, (hl)
    000001EA 21r00r00         [12]  483 	ld	hl, #_neighbors
    000001ED A6               [ 8]  484 	and	a, (hl)
    000001EE 4F               [ 4]  485 	ld	c, a
    000001EF F8 0B            [12]  486 	ldhl	sp,	#11
    000001F1 7E               [ 8]  487 	ld	a, (hl)
    000001F2 21r01r00         [12]  488 	ld	hl, #_neighbors + 1
    000001F5 A6               [ 8]  489 	and	a, (hl)
    000001F6 47               [ 4]  490 	ld	b, a
    000001F7 F8 0A            [12]  491 	ldhl	sp,	#10
    000001F9 7E               [ 8]  492 	ld	a, (hl)
    000001FA 91               [ 4]  493 	sub	a, c
    000001FB C2rF5r02         [16]  494 	jp	NZ,00111$
    000001FE 23               [ 8]  495 	inc	hl
    000001FF 7E               [ 8]  496 	ld	a, (hl)
    00000200 90               [ 4]  497 	sub	a, b
    00000201 C2rF5r02         [16]  498 	jp	NZ,00111$
    00000204 F8 08            [12]  499 	ldhl	sp,#8
    00000206 2A               [ 8]  500 	ld	a, (hl+)
    00000207 5F               [ 4]  501 	ld	e, a
    00000208 56               [ 8]  502 	ld	d, (hl)
    00000209 1A               [ 8]  503 	ld	a, (de)
    0000020A 4F               [ 4]  504 	ld	c, a
    0000020B 13               [ 8]  505 	inc	de
    0000020C 1A               [ 8]  506 	ld	a, (de)
    0000020D 47               [ 4]  507 	ld	b, a
    0000020E F8 02            [12]  508 	ldhl	sp,	#2
    00000210 2A               [ 8]  509 	ld	a,	(hl+)
    00000211 66               [ 8]  510 	ld	h, (hl)
    00000212 6F               [ 4]  511 	ld	l, a
    00000213 09               [ 8]  512 	add	hl, bc
    00000214 4D               [ 4]  513 	ld	c, l
    00000215 44               [ 4]  514 	ld	b, h
    00000216 0A               [ 8]  515 	ld	a, (bc)
    00000217 06 00            [ 8]  516 	ld	b, #0x00
    00000219 F8 0A            [12]  517 	ldhl	sp,	#10
    0000021B A6               [ 8]  518 	and	a, (hl)
    0000021C 23               [ 8]  519 	inc	hl
    0000021D 4F               [ 4]  520 	ld	c, a
    0000021E 78               [ 4]  521 	ld	a, b
    0000021F A6               [ 8]  522 	and	a, (hl)
    00000220 B1               [ 4]  523 	or	a, c
    00000221 C2rF5r02         [16]  524 	jp	NZ, 00111$
                                    525 ;src/dungeon.c:62: int neighbor_room = get_neighbor_room_index(d, cell_index, door);
    00000224 2B               [ 8]  526 	dec	hl
    00000225 2A               [ 8]  527 	ld	a, (hl+)
    00000226 5F               [ 4]  528 	ld	e, a
    00000227 56               [ 8]  529 	ld	d, (hl)
    00000228 D5               [16]  530 	push	de
    00000229 F8 04            [12]  531 	ldhl	sp,	#4
    0000022B 2A               [ 8]  532 	ld	a, (hl+)
    0000022C 4F               [ 4]  533 	ld	c, a
    0000022D 46               [ 8]  534 	ld	b, (hl)
    0000022E F8 0A            [12]  535 	ldhl	sp,	#10
    00000230 2A               [ 8]  536 	ld	a, (hl+)
    00000231 5F               [ 4]  537 	ld	e, a
    00000232 56               [ 8]  538 	ld	d, (hl)
    00000233 CDr6Er03         [24]  539 	call	_get_neighbor_room_index
                                    540 ;src/dungeon.c:64: if ((!~neighbor_room) || (d->grid[neighbor_room] & BIT_USED_ROOM)) {
    00000236 79               [ 4]  541 	ld	a, c
    00000237 2F               [ 4]  542 	cpl
    00000238 5F               [ 4]  543 	ld	e, a
    00000239 78               [ 4]  544 	ld	a, b
    0000023A 2F               [ 4]  545 	cpl
    0000023B B3               [ 4]  546 	or	a, e
    0000023C CArF5r02         [16]  547 	jp	Z, 00111$
    0000023F F8 08            [12]  548 	ldhl	sp,#8
    00000241 2A               [ 8]  549 	ld	a, (hl+)
    00000242 5F               [ 4]  550 	ld	e, a
    00000243 56               [ 8]  551 	ld	d, (hl)
    00000244 1A               [ 8]  552 	ld	a, (de)
    00000245 6F               [ 4]  553 	ld	l, a
                                    554 ;	spillPairReg hl
                                    555 ;	spillPairReg hl
    00000246 13               [ 8]  556 	inc	de
    00000247 1A               [ 8]  557 	ld	a, (de)
    00000248 67               [ 4]  558 	ld	h, a
                                    559 ;	spillPairReg hl
                                    560 ;	spillPairReg hl
    00000249 09               [ 8]  561 	add	hl, bc
    0000024A 7E               [ 8]  562 	ld	a, (hl)
    0000024B 0F               [ 4]  563 	rrca
    0000024C DArF5r02         [16]  564 	jp	C,00111$
                                    565 ;src/dungeon.c:68: opposite_door = get_opposite_direction_bit(door);
    0000024F C5               [16]  566 	push	bc
    00000250 F8 0C            [12]  567 	ldhl	sp,	#12
    00000252 2A               [ 8]  568 	ld	a, (hl+)
    00000253 5F               [ 4]  569 	ld	e, a
    00000254 56               [ 8]  570 	ld	d, (hl)
    00000255 CDr42r03         [24]  571 	call	_get_opposite_direction_bit
    00000258 F8 06            [12]  572 	ldhl	sp,	#6
    0000025A 79               [ 4]  573 	ld	a, c
    0000025B 22               [ 8]  574 	ld	(hl+), a
    0000025C 70               [ 8]  575 	ld	(hl), b
    0000025D C1               [12]  576 	pop	bc
                                    577 ;src/dungeon.c:70: if ((door & potential_doors) == door) {
    0000025E F8 0A            [12]  578 	ldhl	sp,	#10
    00000260 7E               [ 8]  579 	ld	a, (hl)
    00000261 F8 00            [12]  580 	ldhl	sp,	#0
    00000263 A6               [ 8]  581 	and	a, (hl)
    00000264 5F               [ 4]  582 	ld	e, a
    00000265 F8 0B            [12]  583 	ldhl	sp,	#11
    00000267 7E               [ 8]  584 	ld	a, (hl)
    00000268 F8 01            [12]  585 	ldhl	sp,	#1
    0000026A A6               [ 8]  586 	and	a, (hl)
    0000026B 57               [ 4]  587 	ld	d, a
    0000026C F8 0A            [12]  588 	ldhl	sp,	#10
    0000026E 7E               [ 8]  589 	ld	a, (hl)
    0000026F 93               [ 4]  590 	sub	a, e
    00000270 20 35            [12]  591 	jr	NZ, 00108$
    00000272 23               [ 8]  592 	inc	hl
    00000273 7E               [ 8]  593 	ld	a, (hl)
    00000274 92               [ 4]  594 	sub	a, d
    00000275 20 30            [12]  595 	jr	NZ, 00108$
                                    596 ;src/dungeon.c:71: d->grid[cell_index] |= door;
    00000277 F8 08            [12]  597 	ldhl	sp,#8
    00000279 2A               [ 8]  598 	ld	a, (hl+)
    0000027A 5F               [ 4]  599 	ld	e, a
    0000027B 56               [ 8]  600 	ld	d, (hl)
    0000027C 1A               [ 8]  601 	ld	a, (de)
    0000027D F8 06            [12]  602 	ldhl	sp,	#6
    0000027F 22               [ 8]  603 	ld	(hl+), a
    00000280 13               [ 8]  604 	inc	de
    00000281 1A               [ 8]  605 	ld	a, (de)
    00000282 32               [ 8]  606 	ld	(hl-), a
    00000283 2A               [ 8]  607 	ld	a, (hl+)
    00000284 5F               [ 4]  608 	ld	e, a
    00000285 56               [ 8]  609 	ld	d, (hl)
    00000286 F8 02            [12]  610 	ldhl	sp,	#2
    00000288 2A               [ 8]  611 	ld	a,	(hl+)
    00000289 66               [ 8]  612 	ld	h, (hl)
    0000028A 6F               [ 4]  613 	ld	l, a
    0000028B 19               [ 8]  614 	add	hl, de
    0000028C 5D               [ 4]  615 	ld	e, l
    0000028D 54               [ 4]  616 	ld	d, h
    0000028E 1A               [ 8]  617 	ld	a, (de)
    0000028F F8 0A            [12]  618 	ldhl	sp,	#10
    00000291 6E               [ 8]  619 	ld	l, (hl)
                                    620 ;	spillPairReg hl
                                    621 ;	spillPairReg hl
    00000292 B5               [ 4]  622 	or	a, l
    00000293 12               [ 8]  623 	ld	(de), a
                                    624 ;src/dungeon.c:72: d->grid[neighbor_room] |= opposite_door;
    00000294 F8 08            [12]  625 	ldhl	sp,#8
    00000296 2A               [ 8]  626 	ld	a, (hl+)
    00000297 5F               [ 4]  627 	ld	e, a
    00000298 56               [ 8]  628 	ld	d, (hl)
    00000299 1A               [ 8]  629 	ld	a, (de)
    0000029A 6F               [ 4]  630 	ld	l, a
                                    631 ;	spillPairReg hl
                                    632 ;	spillPairReg hl
    0000029B 13               [ 8]  633 	inc	de
    0000029C 1A               [ 8]  634 	ld	a, (de)
    0000029D 67               [ 4]  635 	ld	h, a
                                    636 ;	spillPairReg hl
                                    637 ;	spillPairReg hl
    0000029E 09               [ 8]  638 	add	hl, bc
    0000029F 5D               [ 4]  639 	ld	e, l
    000002A0 54               [ 4]  640 	ld	d, h
    000002A1 1A               [ 8]  641 	ld	a, (de)
    000002A2 F8 04            [12]  642 	ldhl	sp,	#4
    000002A4 6E               [ 8]  643 	ld	l, (hl)
                                    644 ;	spillPairReg hl
                                    645 ;	spillPairReg hl
    000002A5 B5               [ 4]  646 	or	a, l
    000002A6 12               [ 8]  647 	ld	(de), a
    000002A7                        648 00108$:
                                    649 ;src/dungeon.c:75: if (d->grid[neighbor_room] == opposite_door) {
    000002A7 F8 08            [12]  650 	ldhl	sp,#8
    000002A9 2A               [ 8]  651 	ld	a, (hl+)
    000002AA 5F               [ 4]  652 	ld	e, a
    000002AB 56               [ 8]  653 	ld	d, (hl)
    000002AC 1A               [ 8]  654 	ld	a, (de)
    000002AD 6F               [ 4]  655 	ld	l, a
                                    656 ;	spillPairReg hl
                                    657 ;	spillPairReg hl
    000002AE 13               [ 8]  658 	inc	de
    000002AF 1A               [ 8]  659 	ld	a, (de)
    000002B0 67               [ 4]  660 	ld	h, a
                                    661 ;	spillPairReg hl
                                    662 ;	spillPairReg hl
    000002B1 09               [ 8]  663 	add	hl, bc
    000002B2 5E               [ 8]  664 	ld	e, (hl)
    000002B3 16 00            [ 8]  665 	ld	d, #0x00
    000002B5 F8 04            [12]  666 	ldhl	sp,	#4
    000002B7 7E               [ 8]  667 	ld	a, (hl)
    000002B8 93               [ 4]  668 	sub	a, e
    000002B9 20 3A            [12]  669 	jr	NZ, 00111$
    000002BB 23               [ 8]  670 	inc	hl
    000002BC 7E               [ 8]  671 	ld	a, (hl)
    000002BD 92               [ 4]  672 	sub	a, d
    000002BE 20 35            [12]  673 	jr	NZ, 00111$
                                    674 ;src/dungeon.c:76: cells_queue[*queue_size] = neighbor_room;
    000002C0 F8 10            [12]  675 	ldhl	sp,	#16
    000002C2 7E               [ 8]  676 	ld	a, (hl)
    000002C3 F8 06            [12]  677 	ldhl	sp,	#6
    000002C5 77               [ 8]  678 	ld	(hl), a
    000002C6 F8 11            [12]  679 	ldhl	sp,	#17
    000002C8 7E               [ 8]  680 	ld	a, (hl)
    000002C9 F8 07            [12]  681 	ldhl	sp,	#7
    000002CB 32               [ 8]  682 	ld	(hl-), a
    000002CC 2A               [ 8]  683 	ld	a, (hl+)
    000002CD 5F               [ 4]  684 	ld	e, a
    000002CE 56               [ 8]  685 	ld	d, (hl)
    000002CF 1A               [ 8]  686 	ld	a, (de)
    000002D0 6F               [ 4]  687 	ld	l, a
                                    688 ;	spillPairReg hl
                                    689 ;	spillPairReg hl
    000002D1 13               [ 8]  690 	inc	de
    000002D2 1A               [ 8]  691 	ld	a, (de)
    000002D3 67               [ 4]  692 	ld	h, a
                                    693 ;	spillPairReg hl
                                    694 ;	spillPairReg hl
    000002D4 29               [ 8]  695 	add	hl, hl
    000002D5 5D               [ 4]  696 	ld	e, l
    000002D6 54               [ 4]  697 	ld	d, h
    000002D7 F8 0E            [12]  698 	ldhl	sp,	#14
    000002D9 2A               [ 8]  699 	ld	a,	(hl+)
    000002DA 66               [ 8]  700 	ld	h, (hl)
    000002DB 6F               [ 4]  701 	ld	l, a
    000002DC 19               [ 8]  702 	add	hl, de
    000002DD 5D               [ 4]  703 	ld	e, l
    000002DE 54               [ 4]  704 	ld	d, h
    000002DF 79               [ 4]  705 	ld	a, c
    000002E0 12               [ 8]  706 	ld	(de), a
    000002E1 13               [ 8]  707 	inc	de
    000002E2 78               [ 4]  708 	ld	a, b
    000002E3 12               [ 8]  709 	ld	(de), a
                                    710 ;src/dungeon.c:77: (*queue_size) += 1;
    000002E4 F8 06            [12]  711 	ldhl	sp,#6
    000002E6 2A               [ 8]  712 	ld	a, (hl+)
    000002E7 5F               [ 4]  713 	ld	e, a
    000002E8 56               [ 8]  714 	ld	d, (hl)
    000002E9 1A               [ 8]  715 	ld	a, (de)
    000002EA 4F               [ 4]  716 	ld	c, a
    000002EB 13               [ 8]  717 	inc	de
    000002EC 1A               [ 8]  718 	ld	a, (de)
    000002ED 47               [ 4]  719 	ld	b, a
    000002EE 03               [ 8]  720 	inc	bc
    000002EF 3A               [ 8]  721 	ld	a, (hl-)
    000002F0 6E               [ 8]  722 	ld	l, (hl)
    000002F1 67               [ 4]  723 	ld	h, a
    000002F2 79               [ 4]  724 	ld	a, c
    000002F3 22               [ 8]  725 	ld	(hl+), a
    000002F4 70               [ 8]  726 	ld	(hl), b
    000002F5                        727 00111$:
                                    728 ;src/dungeon.c:57: for (door = 1; door <= neighbors; door <<= 1) {
    000002F5 F8 0A            [12]  729 	ldhl	sp,	#10
    000002F7 CB 26            [16]  730 	sla	(hl)
    000002F9 23               [ 8]  731 	inc	hl
    000002FA CB 16            [16]  732 	rl	(hl)
    000002FC C3rC6r01         [16]  733 	jp	00114$
    000002FF                        734 00115$:
                                    735 ;src/dungeon.c:80: }
    000002FF E8 0C            [16]  736 	add	sp, #12
    00000301 E1               [12]  737 	pop	hl
    00000302 E8 04            [16]  738 	add	sp, #4
    00000304 E9               [ 4]  739 	jp	(hl)
                                    740 ;src/dungeon.c:82: bool room_has_door(Dungeon* dungeon, int room, int direction) {
                                    741 ;	---------------------------------
                                    742 ; Function room_has_door
                                    743 ; ---------------------------------
    00000305                        744 _room_has_door::
    00000305 E8 FA            [16]  745 	add	sp, #-6
    00000307 F8 04            [12]  746 	ldhl	sp,	#4
    00000309 7B               [ 4]  747 	ld	a, e
    0000030A 22               [ 8]  748 	ld	(hl+), a
    0000030B 72               [ 8]  749 	ld	(hl), d
    0000030C F8 02            [12]  750 	ldhl	sp,	#2
    0000030E 79               [ 4]  751 	ld	a, c
    0000030F 22               [ 8]  752 	ld	(hl+), a
    00000310 70               [ 8]  753 	ld	(hl), b
                                    754 ;src/dungeon.c:83: int needed_bit = direction;
    00000311 F8 08            [12]  755 	ldhl	sp,	#8
    00000313 2A               [ 8]  756 	ld	a, (hl+)
    00000314 4F               [ 4]  757 	ld	c, a
    00000315 46               [ 8]  758 	ld	b, (hl)
                                    759 ;src/dungeon.c:84: return (dungeon->grid[room] & needed_bit) == needed_bit;
    00000316 F8 04            [12]  760 	ldhl	sp,#4
    00000318 2A               [ 8]  761 	ld	a, (hl+)
    00000319 5F               [ 4]  762 	ld	e, a
    0000031A 56               [ 8]  763 	ld	d, (hl)
    0000031B 1A               [ 8]  764 	ld	a, (de)
    0000031C F8 00            [12]  765 	ldhl	sp,	#0
    0000031E 22               [ 8]  766 	ld	(hl+), a
    0000031F 13               [ 8]  767 	inc	de
    00000320 1A               [ 8]  768 	ld	a, (de)
    00000321 22               [ 8]  769 	ld	(hl+), a
    00000322 D1               [12]  770 	pop	de
    00000323 D5               [16]  771 	push	de
    00000324 2A               [ 8]  772 	ld	a,	(hl+)
    00000325 66               [ 8]  773 	ld	h, (hl)
    00000326 6F               [ 4]  774 	ld	l, a
    00000327 19               [ 8]  775 	add	hl, de
    00000328 5D               [ 4]  776 	ld	e, l
    00000329 54               [ 4]  777 	ld	d, h
    0000032A 1A               [ 8]  778 	ld	a, (de)
    0000032B 1E 00            [ 8]  779 	ld	e, #0x00
    0000032D A1               [ 4]  780 	and	a, c
    0000032E 6F               [ 4]  781 	ld	l, a
                                    782 ;	spillPairReg hl
                                    783 ;	spillPairReg hl
    0000032F 7B               [ 4]  784 	ld	a, e
    00000330 A0               [ 4]  785 	and	a, b
    00000331 67               [ 4]  786 	ld	h, a
                                    787 ;	spillPairReg hl
                                    788 ;	spillPairReg hl
    00000332 7D               [ 4]  789 	ld	a, l
    00000333 91               [ 4]  790 	sub	a, c
    00000334 20 06            [12]  791 	jr	NZ, 00103$
    00000336 7C               [ 4]  792 	ld	a, h
    00000337 90               [ 4]  793 	sub	a, b
    00000338 3E 01            [ 8]  794 	ld	a, #0x01
    0000033A 28 01            [12]  795 	jr	Z, 00104$
    0000033C                        796 00103$:
    0000033C AF               [ 4]  797 	xor	a, a
    0000033D                        798 00104$:
                                    799 ;src/dungeon.c:85: }
    0000033D E8 06            [16]  800 	add	sp, #6
    0000033F E1               [12]  801 	pop	hl
    00000340 C1               [12]  802 	pop	bc
    00000341 E9               [ 4]  803 	jp	(hl)
                                    804 ;src/dungeon.c:87: int get_opposite_direction_bit(int direction) {
                                    805 ;	---------------------------------
                                    806 ; Function get_opposite_direction_bit
                                    807 ; ---------------------------------
    00000342                        808 _get_opposite_direction_bit::
                                    809 ;src/dungeon.c:88: int opposite_direction = -1;
    00000342 01 FF FF         [12]  810 	ld	bc, #0xffff
                                    811 ;src/dungeon.c:90: switch (direction) {
    00000345 7B               [ 4]  812 	ld	a, e
    00000346 D6 04            [ 8]  813 	sub	a, #0x04
    00000348 B2               [ 4]  814 	or	a, d
    00000349 28 13            [12]  815 	jr	Z, 00101$
    0000034B 7B               [ 4]  816 	ld	a, e
    0000034C D6 08            [ 8]  817 	sub	a, #0x08
    0000034E B2               [ 4]  818 	or	a, d
    0000034F 28 19            [12]  819 	jr	Z, 00104$
    00000351 7B               [ 4]  820 	ld	a, e
    00000352 D6 10            [ 8]  821 	sub	a, #0x10
    00000354 B2               [ 4]  822 	or	a, d
    00000355 28 0F            [12]  823 	jr	Z, 00103$
    00000357 7B               [ 4]  824 	ld	a, e
    00000358 D6 20            [ 8]  825 	sub	a, #0x20
    0000035A B2               [ 4]  826 	or	a, d
    0000035B 28 05            [12]  827 	jr	Z, 00102$
    0000035D C9               [16]  828 	ret
                                    829 ;src/dungeon.c:91: case BIT_DOOR_NORTH:
    0000035E                        830 00101$:
                                    831 ;src/dungeon.c:92: opposite_direction = BIT_DOOR_SOUTH;
    0000035E 01 10 00         [12]  832 	ld	bc, #0x0010
                                    833 ;src/dungeon.c:93: break;
    00000361 C9               [16]  834 	ret
                                    835 ;src/dungeon.c:94: case BIT_DOOR_WEST:
    00000362                        836 00102$:
                                    837 ;src/dungeon.c:95: opposite_direction = BIT_DOOR_EAST;
    00000362 01 08 00         [12]  838 	ld	bc, #0x0008
                                    839 ;src/dungeon.c:96: break;
    00000365 C9               [16]  840 	ret
                                    841 ;src/dungeon.c:97: case BIT_DOOR_SOUTH:
    00000366                        842 00103$:
                                    843 ;src/dungeon.c:98: opposite_direction = BIT_DOOR_NORTH;
    00000366 01 04 00         [12]  844 	ld	bc, #0x0004
                                    845 ;src/dungeon.c:99: break;
    00000369 C9               [16]  846 	ret
                                    847 ;src/dungeon.c:100: case BIT_DOOR_EAST:
    0000036A                        848 00104$:
                                    849 ;src/dungeon.c:101: opposite_direction = BIT_DOOR_WEST;
    0000036A 01 20 00         [12]  850 	ld	bc, #0x0020
                                    851 ;src/dungeon.c:103: }
                                    852 ;src/dungeon.c:105: return opposite_direction;
                                    853 ;src/dungeon.c:106: }
    0000036D C9               [16]  854 	ret
                                    855 ;src/dungeon.c:108: int get_neighbor_room_index(Dungeon* dungeon, int current_room, int direction) {
                                    856 ;	---------------------------------
                                    857 ; Function get_neighbor_room_index
                                    858 ; ---------------------------------
    0000036E                        859 _get_neighbor_room_index::
    0000036E E8 F2            [16]  860 	add	sp, #-14
    00000370 F8 0C            [12]  861 	ldhl	sp,	#12
    00000372 7B               [ 4]  862 	ld	a, e
    00000373 22               [ 8]  863 	ld	(hl+), a
    00000374 72               [ 8]  864 	ld	(hl), d
    00000375 F8 0A            [12]  865 	ldhl	sp,	#10
    00000377 79               [ 4]  866 	ld	a, c
    00000378 22               [ 8]  867 	ld	(hl+), a
                                    868 ;src/dungeon.c:110: width = dungeon->width;
    00000379 78               [ 4]  869 	ld	a, b
    0000037A 22               [ 8]  870 	ld	(hl+), a
    0000037B 2A               [ 8]  871 	ld	a, (hl+)
    0000037C 5F               [ 4]  872 	ld	e, a
    0000037D 56               [ 8]  873 	ld	d, (hl)
    0000037E 21 04 00         [12]  874 	ld	hl, #0x0004
    00000381 19               [ 8]  875 	add	hl, de
    00000382 4D               [ 4]  876 	ld	c, l
    00000383 44               [ 4]  877 	ld	b, h
    00000384 59               [ 4]  878 	ld	e, c
    00000385 50               [ 4]  879 	ld	d, b
    00000386 1A               [ 8]  880 	ld	a, (de)
    00000387 F8 00            [12]  881 	ldhl	sp,	#0
    00000389 22               [ 8]  882 	ld	(hl+), a
    0000038A 13               [ 8]  883 	inc	de
    0000038B 1A               [ 8]  884 	ld	a, (de)
    0000038C 77               [ 8]  885 	ld	(hl), a
                                    886 ;src/dungeon.c:111: height = dungeon->height;
    0000038D F8 0C            [12]  887 	ldhl	sp,#12
    0000038F 2A               [ 8]  888 	ld	a, (hl+)
    00000390 5F               [ 4]  889 	ld	e, a
    00000391 56               [ 8]  890 	ld	d, (hl)
    00000392 21 06 00         [12]  891 	ld	hl, #0x0006
    00000395 19               [ 8]  892 	add	hl, de
    00000396 4D               [ 4]  893 	ld	c, l
    00000397 44               [ 4]  894 	ld	b, h
    00000398 59               [ 4]  895 	ld	e, c
    00000399 50               [ 4]  896 	ld	d, b
    0000039A 1A               [ 8]  897 	ld	a, (de)
    0000039B F8 02            [12]  898 	ldhl	sp,	#2
    0000039D 22               [ 8]  899 	ld	(hl+), a
    0000039E 13               [ 8]  900 	inc	de
    0000039F 1A               [ 8]  901 	ld	a, (de)
    000003A0 77               [ 8]  902 	ld	(hl), a
                                    903 ;src/dungeon.c:113: switch (direction) {
    000003A1 F8 10            [12]  904 	ldhl	sp,	#16
    000003A3 2A               [ 8]  905 	ld	a, (hl+)
    000003A4 D6 04            [ 8]  906 	sub	a, #0x04
    000003A6 B6               [ 8]  907 	or	a, (hl)
    000003A7 3E 01            [ 8]  908 	ld	a, #0x01
    000003A9 28 01            [12]  909 	jr	Z, 00175$
    000003AB AF               [ 4]  910 	xor	a, a
    000003AC                        911 00175$:
    000003AC F8 04            [12]  912 	ldhl	sp,	#4
    000003AE 77               [ 8]  913 	ld	(hl), a
    000003AF F8 10            [12]  914 	ldhl	sp,	#16
    000003B1 2A               [ 8]  915 	ld	a, (hl+)
    000003B2 D6 08            [ 8]  916 	sub	a, #0x08
    000003B4 B6               [ 8]  917 	or	a, (hl)
    000003B5 3E 01            [ 8]  918 	ld	a, #0x01
    000003B7 28 01            [12]  919 	jr	Z, 00177$
    000003B9 AF               [ 4]  920 	xor	a, a
    000003BA                        921 00177$:
    000003BA F8 05            [12]  922 	ldhl	sp,	#5
    000003BC 77               [ 8]  923 	ld	(hl), a
    000003BD F8 10            [12]  924 	ldhl	sp,	#16
    000003BF 2A               [ 8]  925 	ld	a, (hl+)
    000003C0 D6 10            [ 8]  926 	sub	a, #0x10
    000003C2 B6               [ 8]  927 	or	a, (hl)
    000003C3 3E 01            [ 8]  928 	ld	a, #0x01
    000003C5 28 01            [12]  929 	jr	Z, 00179$
    000003C7 AF               [ 4]  930 	xor	a, a
    000003C8                        931 00179$:
    000003C8 F8 06            [12]  932 	ldhl	sp,	#6
    000003CA 77               [ 8]  933 	ld	(hl), a
    000003CB F8 10            [12]  934 	ldhl	sp,	#16
    000003CD 2A               [ 8]  935 	ld	a, (hl+)
    000003CE D6 20            [ 8]  936 	sub	a, #0x20
    000003D0 B6               [ 8]  937 	or	a, (hl)
    000003D1 3E 01            [ 8]  938 	ld	a, #0x01
    000003D3 28 01            [12]  939 	jr	Z, 00181$
    000003D5 AF               [ 4]  940 	xor	a, a
    000003D6                        941 00181$:
    000003D6 F8 07            [12]  942 	ldhl	sp,	#7
    000003D8 77               [ 8]  943 	ld	(hl), a
    000003D9 F8 04            [12]  944 	ldhl	sp,	#4
    000003DB 7E               [ 8]  945 	ld	a, (hl)
    000003DC B7               [ 4]  946 	or	a, a
    000003DD 20 11            [12]  947 	jr	NZ, 00101$
    000003DF 23               [ 8]  948 	inc	hl
    000003E0 7E               [ 8]  949 	ld	a, (hl)
    000003E1 B7               [ 4]  950 	or	a, a
    000003E2 20 1E            [12]  951 	jr	NZ, 00102$
    000003E4 23               [ 8]  952 	inc	hl
    000003E5 7E               [ 8]  953 	ld	a, (hl)
    000003E6 B7               [ 4]  954 	or	a, a
    000003E7 20 2D            [12]  955 	jr	NZ, 00103$
    000003E9 23               [ 8]  956 	inc	hl
    000003EA 7E               [ 8]  957 	ld	a, (hl)
    000003EB B7               [ 4]  958 	or	a, a
    000003EC 20 3C            [12]  959 	jr	NZ, 00104$
    000003EE 18 4D            [12]  960 	jr	00105$
                                    961 ;src/dungeon.c:114: case BIT_DOOR_NORTH:
    000003F0                        962 00101$:
                                    963 ;src/dungeon.c:115: neighbor_room = current_room - width;
    000003F0 F8 0A            [12]  964 	ldhl	sp,#10
    000003F2 2A               [ 8]  965 	ld	a, (hl+)
    000003F3 5F               [ 4]  966 	ld	e, a
    000003F4 56               [ 8]  967 	ld	d, (hl)
    000003F5 E1               [12]  968 	pop	hl
    000003F6 E5               [16]  969 	push	hl
    000003F7 7B               [ 4]  970 	ld	a, e
    000003F8 95               [ 4]  971 	sub	a, l
    000003F9 5F               [ 4]  972 	ld	e, a
    000003FA 7A               [ 4]  973 	ld	a, d
    000003FB 9C               [ 4]  974 	sbc	a, h
    000003FC F8 09            [12]  975 	ldhl	sp,	#9
    000003FE 32               [ 8]  976 	ld	(hl-), a
    000003FF 73               [ 8]  977 	ld	(hl), e
                                    978 ;src/dungeon.c:116: break;
    00000400 18 42            [12]  979 	jr	00106$
                                    980 ;src/dungeon.c:117: case BIT_DOOR_EAST:
    00000402                        981 00102$:
                                    982 ;src/dungeon.c:118: neighbor_room = current_room + 1;
    00000402 F8 0A            [12]  983 	ldhl	sp,#10
    00000404 2A               [ 8]  984 	ld	a, (hl+)
    00000405 5F               [ 4]  985 	ld	e, a
    00000406 56               [ 8]  986 	ld	d, (hl)
    00000407 6B               [ 4]  987 	ld	l, e
    00000408 62               [ 4]  988 	ld	h, d
    00000409 23               [ 8]  989 	inc	hl
    0000040A E5               [16]  990 	push	hl
    0000040B 7D               [ 4]  991 	ld	a, l
    0000040C F8 0A            [12]  992 	ldhl	sp,	#10
    0000040E 77               [ 8]  993 	ld	(hl), a
    0000040F E1               [12]  994 	pop	hl
    00000410 7C               [ 4]  995 	ld	a, h
    00000411 F8 09            [12]  996 	ldhl	sp,	#9
    00000413 77               [ 8]  997 	ld	(hl), a
                                    998 ;src/dungeon.c:119: break;
    00000414 18 2E            [12]  999 	jr	00106$
                                   1000 ;src/dungeon.c:120: case BIT_DOOR_SOUTH:
    00000416                       1001 00103$:
                                   1002 ;src/dungeon.c:121: neighbor_room = current_room + width;
    00000416 F8 0A            [12] 1003 	ldhl	sp,#10
    00000418 2A               [ 8] 1004 	ld	a, (hl+)
    00000419 5F               [ 4] 1005 	ld	e, a
    0000041A 56               [ 8] 1006 	ld	d, (hl)
    0000041B E1               [12] 1007 	pop	hl
    0000041C E5               [16] 1008 	push	hl
    0000041D 19               [ 8] 1009 	add	hl, de
    0000041E E5               [16] 1010 	push	hl
    0000041F 7D               [ 4] 1011 	ld	a, l
    00000420 F8 0A            [12] 1012 	ldhl	sp,	#10
    00000422 77               [ 8] 1013 	ld	(hl), a
    00000423 E1               [12] 1014 	pop	hl
    00000424 7C               [ 4] 1015 	ld	a, h
    00000425 F8 09            [12] 1016 	ldhl	sp,	#9
    00000427 77               [ 8] 1017 	ld	(hl), a
                                   1018 ;src/dungeon.c:122: break;
    00000428 18 1A            [12] 1019 	jr	00106$
                                   1020 ;src/dungeon.c:123: case BIT_DOOR_WEST:
    0000042A                       1021 00104$:
                                   1022 ;src/dungeon.c:124: neighbor_room = current_room - 1;
    0000042A F8 0A            [12] 1023 	ldhl	sp,#10
    0000042C 2A               [ 8] 1024 	ld	a, (hl+)
    0000042D 5F               [ 4] 1025 	ld	e, a
    0000042E 56               [ 8] 1026 	ld	d, (hl)
    0000042F 21 01 00         [12] 1027 	ld	hl, #0x0001
    00000432 7B               [ 4] 1028 	ld	a, e
    00000433 95               [ 4] 1029 	sub	a, l
    00000434 5F               [ 4] 1030 	ld	e, a
    00000435 7A               [ 4] 1031 	ld	a, d
    00000436 9C               [ 4] 1032 	sbc	a, h
    00000437 F8 09            [12] 1033 	ldhl	sp,	#9
    00000439 32               [ 8] 1034 	ld	(hl-), a
    0000043A 73               [ 8] 1035 	ld	(hl), e
                                   1036 ;src/dungeon.c:125: break;
    0000043B 18 07            [12] 1037 	jr	00106$
                                   1038 ;src/dungeon.c:126: default:
    0000043D                       1039 00105$:
                                   1040 ;src/dungeon.c:127: neighbor_room = -1;
    0000043D F8 08            [12] 1041 	ldhl	sp,	#8
    0000043F 3E FF            [ 8] 1042 	ld	a, #0xff
    00000441 22               [ 8] 1043 	ld	(hl+), a
    00000442 36 FF            [12] 1044 	ld	(hl), #0xff
                                   1045 ;src/dungeon.c:128: }
    00000444                       1046 00106$:
                                   1047 ;src/dungeon.c:131: ((direction == BIT_DOOR_NORTH) && (neighbor_room >= 0))
    00000444 F8 04            [12] 1048 	ldhl	sp,	#4
    00000446 7E               [ 8] 1049 	ld	a, (hl)
    00000447 B7               [ 4] 1050 	or	a, a
    00000448 28 07            [12] 1051 	jr	Z, 00111$
    0000044A F8 09            [12] 1052 	ldhl	sp,	#9
    0000044C CB 7E            [12] 1053 	bit	7, (hl)
    0000044E CArE4r04         [16] 1054 	jp	Z, 00107$
    00000451                       1055 00111$:
                                   1056 ;src/dungeon.c:132: || ((direction == BIT_DOOR_SOUTH) && (neighbor_room < (width * height)))
    00000451 F8 06            [12] 1057 	ldhl	sp,	#6
    00000453 7E               [ 8] 1058 	ld	a, (hl)
    00000454 B7               [ 4] 1059 	or	a, a
    00000455 28 25            [12] 1060 	jr	Z, 00113$
    00000457 F8 02            [12] 1061 	ldhl	sp,	#2
    00000459 2A               [ 8] 1062 	ld	a, (hl+)
    0000045A 4F               [ 4] 1063 	ld	c, a
    0000045B 46               [ 8] 1064 	ld	b, (hl)
    0000045C D1               [12] 1065 	pop	de
    0000045D D5               [16] 1066 	push	de
    0000045E CDr00r00         [24] 1067 	call	__mulint
    00000461 F8 08            [12] 1068 	ldhl	sp,	#8
    00000463 2A               [ 8] 1069 	ld	a, (hl+)
    00000464 91               [ 4] 1070 	sub	a, c
    00000465 7E               [ 8] 1071 	ld	a, (hl)
    00000466 98               [ 4] 1072 	sbc	a, b
    00000467 56               [ 8] 1073 	ld	d, (hl)
    00000468 78               [ 4] 1074 	ld	a, b
    00000469 5F               [ 4] 1075 	ld	e, a
    0000046A CB 7B            [ 8] 1076 	bit	7, e
    0000046C 28 07            [12] 1077 	jr	Z, 00182$
    0000046E CB 7A            [ 8] 1078 	bit	7, d
    00000470 20 08            [12] 1079 	jr	NZ, 00183$
    00000472 BF               [ 4] 1080 	cp	a, a
    00000473 18 05            [12] 1081 	jr	00183$
    00000475                       1082 00182$:
    00000475 CB 7A            [ 8] 1083 	bit	7, d
    00000477 28 01            [12] 1084 	jr	Z, 00183$
    00000479 37               [ 4] 1085 	scf
    0000047A                       1086 00183$:
    0000047A 38 68            [12] 1087 	jr	C, 00107$
    0000047C                       1088 00113$:
                                   1089 ;src/dungeon.c:133: || ((direction == BIT_DOOR_EAST) && ((neighbor_room % width) > 0))
    0000047C C1               [12] 1090 	pop	bc
    0000047D C5               [16] 1091 	push	bc
    0000047E F8 08            [12] 1092 	ldhl	sp,	#8
    00000480 2A               [ 8] 1093 	ld	a, (hl+)
    00000481 5F               [ 4] 1094 	ld	e, a
    00000482 56               [ 8] 1095 	ld	d, (hl)
    00000483 CDr00r00         [24] 1096 	call	__modsint
    00000486 F8 03            [12] 1097 	ldhl	sp,	#3
    00000488 79               [ 4] 1098 	ld	a, c
    00000489 22               [ 8] 1099 	ld	(hl+), a
    0000048A 70               [ 8] 1100 	ld	(hl), b
    0000048B F8 05            [12] 1101 	ldhl	sp,	#5
    0000048D 7E               [ 8] 1102 	ld	a, (hl)
    0000048E B7               [ 4] 1103 	or	a, a
    0000048F 28 1E            [12] 1104 	jr	Z, 00115$
    00000491 2B               [ 8] 1105 	dec	hl
    00000492 2B               [ 8] 1106 	dec	hl
    00000493 AF               [ 4] 1107 	xor	a, a
    00000494 96               [ 8] 1108 	sub	a, (hl)
    00000495 23               [ 8] 1109 	inc	hl
    00000496 3E 00            [ 8] 1110 	ld	a, #0x00
    00000498 9E               [ 8] 1111 	sbc	a, (hl)
    00000499 3E 00            [ 8] 1112 	ld	a, #0x00
    0000049B 57               [ 4] 1113 	ld	d, a
    0000049C 5E               [ 8] 1114 	ld	e, (hl)
    0000049D CB 7B            [ 8] 1115 	bit	7, e
    0000049F 28 07            [12] 1116 	jr	Z, 00184$
    000004A1 CB 7A            [ 8] 1117 	bit	7, d
    000004A3 20 08            [12] 1118 	jr	NZ, 00185$
    000004A5 BF               [ 4] 1119 	cp	a, a
    000004A6 18 05            [12] 1120 	jr	00185$
    000004A8                       1121 00184$:
    000004A8 CB 7A            [ 8] 1122 	bit	7, d
    000004AA 28 01            [12] 1123 	jr	Z, 00185$
    000004AC 37               [ 4] 1124 	scf
    000004AD                       1125 00185$:
    000004AD 38 35            [12] 1126 	jr	C, 00107$
    000004AF                       1127 00115$:
                                   1128 ;src/dungeon.c:134: || ((direction == BIT_DOOR_WEST) && ((neighbor_room % width) < (width - 1)))
    000004AF F8 07            [12] 1129 	ldhl	sp,	#7
    000004B1 7E               [ 8] 1130 	ld	a, (hl)
    000004B2 B7               [ 4] 1131 	or	a, a
    000004B3 28 36            [12] 1132 	jr	Z, 00108$
    000004B5 D1               [12] 1133 	pop	de
    000004B6 D5               [16] 1134 	push	de
    000004B7 21 01 00         [12] 1135 	ld	hl, #0x0001
    000004BA 7B               [ 4] 1136 	ld	a, e
    000004BB 95               [ 4] 1137 	sub	a, l
    000004BC 5F               [ 4] 1138 	ld	e, a
    000004BD 7A               [ 4] 1139 	ld	a, d
    000004BE 9C               [ 4] 1140 	sbc	a, h
    000004BF F8 07            [12] 1141 	ldhl	sp,	#7
    000004C1 32               [ 8] 1142 	ld	(hl-), a
    000004C2 73               [ 8] 1143 	ld	(hl), e
    000004C3 F8 03            [12] 1144 	ldhl	sp,	#3
    000004C5 5D               [ 4] 1145 	ld	e, l
    000004C6 54               [ 4] 1146 	ld	d, h
    000004C7 F8 06            [12] 1147 	ldhl	sp,	#6
    000004C9 1A               [ 8] 1148 	ld	a, (de)
    000004CA 13               [ 8] 1149 	inc	de
    000004CB 96               [ 8] 1150 	sub	a, (hl)
    000004CC 23               [ 8] 1151 	inc	hl
    000004CD 1A               [ 8] 1152 	ld	a, (de)
    000004CE 9E               [ 8] 1153 	sbc	a, (hl)
    000004CF 1A               [ 8] 1154 	ld	a, (de)
    000004D0 57               [ 4] 1155 	ld	d, a
    000004D1 5E               [ 8] 1156 	ld	e, (hl)
    000004D2 CB 7B            [ 8] 1157 	bit	7, e
    000004D4 28 07            [12] 1158 	jr	Z, 00186$
    000004D6 CB 7A            [ 8] 1159 	bit	7, d
    000004D8 20 08            [12] 1160 	jr	NZ, 00187$
    000004DA BF               [ 4] 1161 	cp	a, a
    000004DB 18 05            [12] 1162 	jr	00187$
    000004DD                       1163 00186$:
    000004DD CB 7A            [ 8] 1164 	bit	7, d
    000004DF 28 01            [12] 1165 	jr	Z, 00187$
    000004E1 37               [ 4] 1166 	scf
    000004E2                       1167 00187$:
    000004E2 30 07            [12] 1168 	jr	NC, 00108$
    000004E4                       1169 00107$:
                                   1170 ;src/dungeon.c:136: return neighbor_room;
    000004E4 F8 08            [12] 1171 	ldhl	sp,	#8
    000004E6 2A               [ 8] 1172 	ld	a, (hl+)
    000004E7 4F               [ 4] 1173 	ld	c, a
    000004E8 46               [ 8] 1174 	ld	b, (hl)
    000004E9 18 03            [12] 1175 	jr	00116$
    000004EB                       1176 00108$:
                                   1177 ;src/dungeon.c:139: return -1;
    000004EB 01 FF FF         [12] 1178 	ld	bc, #0xffff
    000004EE                       1179 00116$:
                                   1180 ;src/dungeon.c:140: }
    000004EE E8 0E            [16] 1181 	add	sp, #14
    000004F0 E1               [12] 1182 	pop	hl
    000004F1 F1               [12] 1183 	pop	af
    000004F2 E9               [ 4] 1184 	jp	(hl)
                                   1185 ;src/dungeon.c:142: void free_dungeon(Dungeon* d) {
                                   1186 ;	---------------------------------
                                   1187 ; Function free_dungeon
                                   1188 ; ---------------------------------
    000004F3                       1189 _free_dungeon::
    000004F3 6B               [ 4] 1190 	ld	l, e
                                   1191 ;	spillPairReg hl
                                   1192 ;	spillPairReg hl
    000004F4 62               [ 4] 1193 	ld	h, d
                                   1194 ;	spillPairReg hl
                                   1195 ;	spillPairReg hl
                                   1196 ;src/dungeon.c:143: free(d->grid);
    000004F5 4E               [ 8] 1197 	ld	c, (hl)
    000004F6 23               [ 8] 1198 	inc	hl
    000004F7 46               [ 8] 1199 	ld	b, (hl)
    000004F8 59               [ 4] 1200 	ld	e, c
    000004F9 50               [ 4] 1201 	ld	d, b
                                   1202 ;src/dungeon.c:144: }
    000004FA C3r00r00         [16] 1203 	jp	_free
                                   1204 	.area _CODE
                                   1205 	.area _INITIALIZER
    00000000                       1206 __xinit__neighbors:
    00000000 3C 00                 1207 	.dw #0x003c
                                   1208 	.area _CABS (ABS)
